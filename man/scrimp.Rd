% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scrimp.R
\name{scrimp}
\alias{scrimp}
\title{Anytime univariate SCRIMP++ algorithm}
\usage{
scrimp(data, window_size, exclusion_zone = 0.5, n_workers = 1, progress = TRUE)
}
\arguments{
\item{data}{Required. Any 1-dimension series of numbers (\code{matrix}, \code{vector}, \code{ts} etc.) (See details).}

\item{window_size}{Required. An integer defining the rolling window size.}

\item{exclusion_zone}{A numeric. Defines the size of the area around the rolling window that will be ignored to avoid
trivial matches. Default is \code{0.5}, i.e., half of the \code{window_size}.}

\item{n_workers}{An integer. The number of threads using for computing. Defaults to \code{1}.}

\item{progress}{A logical. If \code{TRUE} (the default) will show a progress bar. Useful for long computations. (See
details)}
}
\description{
Computes the best so far Matrix Profile and Profile Index for Univariate Time Series.
DISCLAIMER: This algorithm still in development by its authors.
Join similarity, RMP and LMP not implemented yet.
}
\details{
The Matrix Profile, has the potential to revolutionize time series data mining because of its
generality, versatility, simplicity and scalability. In particular it has implications for time
series motif discovery, time series joins, shapelet discovery (classification), density
estimation, semantic segmentation, visualization, rule discovery, clustering etc. The anytime
SCRIMP computes the Matrix Profile and Profile Index in such manner that it can be stopped before
its complete calculation and return the best so far results allowing ultra-fast approximate
solutions. \code{verbose} changes how much information is printed by this function; \code{0} means nothing,
\code{1} means text, \code{2} adds the progress bar, \code{3} adds the finish sound. \code{exclusion_zone} is used to
avoid  trivial matches.
}
\examples{
mp <- scrimp(mp_toy_data$data[1:200, 1], window_size = 30, verbose = 0)
\dontrun{
ref_data <- mp_toy_data$data[, 1]
query_data <- mp_toy_data$data[, 2]
# self similarity
mp <- scrimp(ref_data, window_size = 30, s_size = round(nrow(ref_data) * 0.1))
# join similarity
mp <- scrimp(ref_data, query_data, window_size = 30, s_size = round(nrow(query_data) * 0.1))
}

}
\references{
Website: \url{http://www.cs.ucr.edu/~eamonn/MatrixProfile.html}
}
\seealso{
Other matrix profile computations: 
\code{\link{mpx}()},
\code{\link{stamp}()},
\code{\link{stomp}()}
}
\concept{matrix profile computations}
